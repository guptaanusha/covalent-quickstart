{"version":3,"file":"platform/core/steps/steps.component.css","sources":["platform/core/steps/steps.component.scss","platform/core/styles/_variables.scss","platform/core/styles/_theme-functions.scss"],"sourcesContent":["@import '../styles/variables';\r\n\r\n.td-steps {\r\n  padding: $padding; \r\n}","@import 'theme-functions';\r\n\r\n// Teradata UI Platform\r\n// ------------------------------\r\n$navigation-drawer-width: 320px !default;\r\n$padding: 16px;\r\n$margin: $padding;\r\n$step-circle: 24px;\r\n\r\n// Typography\r\n// ------------------------------\r\n$font-family: RobotoDraft, Roboto, 'Helvetica Neue', sans-serif !default;\r\n$font-size: 10px;\r\n\r\n$display-4-font-size-base: rem(11.20) !default;\r\n$display-3-font-size-base: rem(5.600) !default;\r\n$display-2-font-size-base: rem(4.500) !default;\r\n$display-1-font-size-base: rem(3.400) !default;\r\n$headline-font-size-base: rem(2.400) !default;\r\n$title-font-size-base: rem(2.000) !default;\r\n$subhead-font-size-base: rem(1.600) !default;\r\n\r\n$body-font-size-base: rem(1.400) !default;\r\n$caption-font-size-base: rem(1.200) !default;\r\n\r\n// Layout\r\n$baseline-grid: 8px !default;\r\n$layout-breakpoint-xs: 600px !default;\r\n$layout-breakpoint-sm: 600px !default;\r\n$layout-breakpoint-md: 960px !default;\r\n$layout-breakpoint-lg: 1280px !default;\r\n$layout-gutter-width: ($baseline-grid * 2) !default;\r\n\r\n// Typography\r\n$md-body-font-size-base: rem(1.400) !default;\r\n\r\n// App bar variables\r\n$app-bar-height: 64px;\r\n\r\n// card header variables\r\n$md-card-header-size: 40px;\r\n\r\n// Icons\r\n$icon-size: rem(2.4);\r\n\r\n// Toast\r\n$toast-height: $baseline-grid * 3 !default;\r\n$toast-margin: $baseline-grid * 1 !default;\r\n\r\n// Whiteframes\r\n$whiteframe-shadow-z1: 0px 2px 5px 0 rgba(0, 0, 0, 0.26) !default;\r\n$whiteframe-zindex-z1: 1 !default;\r\n$whiteframe-shadow-z2: 0px 8px 17px rgba(0, 0, 0, 0.2) !default;\r\n$whiteframe-zindex-z2: 2 !default;\r\n$whiteframe-shadow-z3: 0px 17px 50px rgba(0, 0, 0, 0.19) !default;\r\n$whiteframe-zindex-z3: 3 !default;\r\n$whiteframe-shadow-z4: 0px 16px 28px 0 rgba(0, 0, 0, 0.22) !default;\r\n$whiteframe-zindex-z4: 4 !default;\r\n$whiteframe-shadow-z5: 0px 27px 24px 0 rgba(0, 0, 0, 0.2) !default;\r\n$whiteframe-zindex-z5: 5 !default;\r\n\r\n// Z-indexes\r\n$z-index-tooltip: 100 !default;\r\n$z-index-dialog: 80 !default;\r\n$z-index-toast: 90 !default;\r\n$z-index-bottom-sheet: 70 !default;\r\n$z-index-scroll-mask: 65 !default;\r\n$z-index-sidenav: 60 !default;\r\n$z-index-backdrop: 50 !default;\r\n$z-index-toolbar: 30 !default;\r\n$z-index-fab: 20 !default;\r\n$z-index-progress-circular: 2 !default; // Used to fix animation bug in Chrome\r\n\r\n// Easing Curves\r\n\r\n// The default animation curves used by material design.\r\n$md-linear-out-slow-in-timing-function: cubic-bezier(0.0, 0.0, 0.2, 0.1) !default;\r\n$md-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0.0, 0.2, 1) !default;\r\n$md-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0.0, 1, 1) !default;\r\n\r\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\r\n\r\n$swift-ease-out-duration: 0.4s !default;\r\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\r\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\r\n\r\n$swift-ease-in-duration: 0.3s !default;\r\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\r\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\r\n\r\n$swift-ease-in-out-duration: 0.5s !default;\r\n$swift-ease-in-out-timing-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\r\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\r\n\r\n$swift-linear-duration: 0.08s !default;\r\n$swift-linear-timing-function: linear !default;\r\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\r\n","// ** Two main functions for users **\r\n// md-palette: used for defining your theme in terms of Material hues.\r\n// md-color: apply colors to components from the palette. Consumes the output of md-palette\r\n\r\n// Implement the rem unit with SCSS so we don't have to actually set a font-size on\r\n// the user's body element.\r\n@function rem($multiplier) {\r\n  $font-size: 10px;\r\n  @return $multiplier * $font-size;\r\n}\r\n\r\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\r\n@function md-contrast($color-map, $hue, $contrast-color-map) {\r\n  @return map-get(map-get($contrast-color-map, $color-map), $hue);\r\n}\r\n\r\n// Creates a map of hues to colors for a theme.\r\n// $color-map\r\n// $primary\r\n// $lighter\r\n// $darker\r\n@function md-palette($color-map, $primary, $lighter, $darker, $contrast-color-map) {\r\n  $result: map_merge($color-map, (\r\n    default: map-get($color-map, $primary),\r\n    lighter: map-get($color-map, $lighter),\r\n    darker: map-get($color-map, $darker),\r\n    default-contrast: md-contrast($color-map, $primary, $contrast-color-map),\r\n    lighter-contrast: md-contrast($color-map, $lighter, $contrast-color-map),\r\n    darker-contrast: md-contrast($color-map, $darker, $contrast-color-map)\r\n  ));\r\n\r\n  // For each hue in the palette, add a \"-contrast\" color to the map.\r\n  @each $hue, $color in $color-map {\r\n    $result: map_merge($result, (\r\n      \"#{$hue}-contrast\": md-contrast($color-map, $hue, $contrast-color-map)\r\n    ))\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n// Gets a color for a material design component.\r\n// $color-map: a map of {key: color}.\r\n// $hue-key: key used to lookup the color in $colorMap. Defaults to 'default'\r\n//     If $hue-key is a number between 0 and 1, it will be treated as $opacity.\r\n// $opacity: the opacity to apply to the color.\r\n@function md-color($color-map, $hue-key: default, $opacity: 1) {\r\n  // If hueKey is a number between zero and one, then it actually contains an\r\n  // opacity value, so recall this function with the default hue and that given opacity.\r\n  @if type-of($hue-key) == number and $hue-key >= 0 and $hue-key <= 1 {\r\n    @return md-color($color-map, default, $hue-key)\r\n  }\r\n\r\n  $color: map-get($color-map, $hue-key);\r\n  $opacity: if(opacity($color) < 1, opacity($color), $opacity);\r\n\r\n  @return rgba($color, $opacity);\r\n}\r\n\r\n\r\n"],"mappings":"AAEA,AAAA,SAAS,CAAC;EACR,OAAO,ECEC,IAAI,GDDb","names":[],"sourceRoot":"/source/"}