{"version":3,"file":"platform/file-upload/file-upload.component.css","sources":["platform/file-upload/file-upload.component.scss","platform/core/styles/_variables.scss","platform/core/styles/_theme-functions.scss","platform/core/styles/_elevation.scss"],"sourcesContent":["@import \"../core/styles/variables\";\r\n@import \"../core/styles/elevation\";\r\n\r\nbutton {\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n  label {\r\n    cursor: pointer;\r\n    display: block;\r\n    height: 100%;\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n    md-icon {\r\n      position: relative;\r\n      top: 6px;\r\n      padding-right: 5px;\r\n    }\r\n    input.md-file-upload-input {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n.td-file-cancel {\r\n  height: 24px;\r\n  width: 24px;\r\n  position: relative;\r\n  top: 24px;\r\n  left: -12px;\r\n  md-icon {\r\n    background-color: white;\r\n    border-radius: 12px;\r\n  }\r\n}\r\n/**\r\n* Class that is added ondragenter by the [TdFileDrop] directive.\r\n*/\r\n.drop-zone {\r\n  // Animation.\r\n  border-radius: 3px;\r\n  transition: background $swift-ease-out-duration $swift-ease-out-timing-function,\r\n              md-elevation-transition-property-value();\r\n  @include md-elevation(8);\r\n  * {\r\n    pointer-events: none; //added to fix bug that re-throws dragleave/dragenter by child elements\r\n  }\r\n}\r\n","@import 'theme-functions';\r\n\r\n// Teradata UI Platform\r\n// ------------------------------\r\n$navigation-drawer-width: 320px !default;\r\n$padding: 16px;\r\n$margin: $padding;\r\n$step-circle: 24px;\r\n\r\n// Typography\r\n// ------------------------------\r\n$font-family: RobotoDraft, Roboto, 'Helvetica Neue', sans-serif !default;\r\n$font-size: 10px;\r\n\r\n$display-4-font-size-base: rem(11.20) !default;\r\n$display-3-font-size-base: rem(5.600) !default;\r\n$display-2-font-size-base: rem(4.500) !default;\r\n$display-1-font-size-base: rem(3.400) !default;\r\n$headline-font-size-base: rem(2.400) !default;\r\n$title-font-size-base: rem(2.000) !default;\r\n$subhead-font-size-base: rem(1.600) !default;\r\n\r\n$body-font-size-base: rem(1.400) !default;\r\n$caption-font-size-base: rem(1.200) !default;\r\n\r\n// Layout\r\n$baseline-grid: 8px !default;\r\n$layout-breakpoint-xs: 600px !default;\r\n$layout-breakpoint-sm: 600px !default;\r\n$layout-breakpoint-md: 960px !default;\r\n$layout-breakpoint-lg: 1280px !default;\r\n$layout-gutter-width: ($baseline-grid * 2) !default;\r\n\r\n// Typography\r\n$md-body-font-size-base: rem(1.400) !default;\r\n\r\n// App bar variables\r\n$app-bar-height: 64px;\r\n\r\n// card header variables\r\n$md-card-header-size: 40px;\r\n\r\n// Icons\r\n$icon-size: rem(2.4);\r\n\r\n// Toast\r\n$toast-height: $baseline-grid * 3 !default;\r\n$toast-margin: $baseline-grid * 1 !default;\r\n\r\n// Whiteframes\r\n$whiteframe-shadow-z1: 0px 2px 5px 0 rgba(0, 0, 0, 0.26) !default;\r\n$whiteframe-zindex-z1: 1 !default;\r\n$whiteframe-shadow-z2: 0px 8px 17px rgba(0, 0, 0, 0.2) !default;\r\n$whiteframe-zindex-z2: 2 !default;\r\n$whiteframe-shadow-z3: 0px 17px 50px rgba(0, 0, 0, 0.19) !default;\r\n$whiteframe-zindex-z3: 3 !default;\r\n$whiteframe-shadow-z4: 0px 16px 28px 0 rgba(0, 0, 0, 0.22) !default;\r\n$whiteframe-zindex-z4: 4 !default;\r\n$whiteframe-shadow-z5: 0px 27px 24px 0 rgba(0, 0, 0, 0.2) !default;\r\n$whiteframe-zindex-z5: 5 !default;\r\n\r\n// Z-indexes\r\n$z-index-tooltip: 100 !default;\r\n$z-index-dialog: 80 !default;\r\n$z-index-toast: 90 !default;\r\n$z-index-bottom-sheet: 70 !default;\r\n$z-index-scroll-mask: 65 !default;\r\n$z-index-sidenav: 60 !default;\r\n$z-index-backdrop: 50 !default;\r\n$z-index-toolbar: 30 !default;\r\n$z-index-fab: 20 !default;\r\n$z-index-progress-circular: 2 !default; // Used to fix animation bug in Chrome\r\n\r\n// Easing Curves\r\n\r\n// The default animation curves used by material design.\r\n$md-linear-out-slow-in-timing-function: cubic-bezier(0.0, 0.0, 0.2, 0.1) !default;\r\n$md-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0.0, 0.2, 1) !default;\r\n$md-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0.0, 1, 1) !default;\r\n\r\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\r\n\r\n$swift-ease-out-duration: 0.4s !default;\r\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\r\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\r\n\r\n$swift-ease-in-duration: 0.3s !default;\r\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\r\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\r\n\r\n$swift-ease-in-out-duration: 0.5s !default;\r\n$swift-ease-in-out-timing-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\r\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\r\n\r\n$swift-linear-duration: 0.08s !default;\r\n$swift-linear-timing-function: linear !default;\r\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\r\n","// ** Two main functions for users **\r\n// md-palette: used for defining your theme in terms of Material hues.\r\n// md-color: apply colors to components from the palette. Consumes the output of md-palette\r\n\r\n// Implement the rem unit with SCSS so we don't have to actually set a font-size on\r\n// the user's body element.\r\n@function rem($multiplier) {\r\n  $font-size: 10px;\r\n  @return $multiplier * $font-size;\r\n}\r\n\r\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\r\n@function md-contrast($color-map, $hue, $contrast-color-map) {\r\n  @return map-get(map-get($contrast-color-map, $color-map), $hue);\r\n}\r\n\r\n// Creates a map of hues to colors for a theme.\r\n// $color-map\r\n// $primary\r\n// $lighter\r\n// $darker\r\n@function md-palette($color-map, $primary, $lighter, $darker, $contrast-color-map) {\r\n  $result: map_merge($color-map, (\r\n    default: map-get($color-map, $primary),\r\n    lighter: map-get($color-map, $lighter),\r\n    darker: map-get($color-map, $darker),\r\n    default-contrast: md-contrast($color-map, $primary, $contrast-color-map),\r\n    lighter-contrast: md-contrast($color-map, $lighter, $contrast-color-map),\r\n    darker-contrast: md-contrast($color-map, $darker, $contrast-color-map)\r\n  ));\r\n\r\n  // For each hue in the palette, add a \"-contrast\" color to the map.\r\n  @each $hue, $color in $color-map {\r\n    $result: map_merge($result, (\r\n      \"#{$hue}-contrast\": md-contrast($color-map, $hue, $contrast-color-map)\r\n    ))\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n// Gets a color for a material design component.\r\n// $color-map: a map of {key: color}.\r\n// $hue-key: key used to lookup the color in $colorMap. Defaults to 'default'\r\n//     If $hue-key is a number between 0 and 1, it will be treated as $opacity.\r\n// $opacity: the opacity to apply to the color.\r\n@function md-color($color-map, $hue-key: default, $opacity: 1) {\r\n  // If hueKey is a number between zero and one, then it actually contains an\r\n  // opacity value, so recall this function with the default hue and that given opacity.\r\n  @if type-of($hue-key) == number and $hue-key >= 0 and $hue-key <= 1 {\r\n    @return md-color($color-map, default, $hue-key)\r\n  }\r\n\r\n  $color: map-get($color-map, $hue-key);\r\n  $opacity: if(opacity($color) < 1, opacity($color), $opacity);\r\n\r\n  @return rgba($color, $opacity);\r\n}\r\n\r\n\r\n","@import \"variables\";\r\n\r\n/**\r\n * A collection of mixins and CSS classes that can be used to apply elevation to a material\r\n * element.\r\n * See: https://www.google.com/design/spec/what-is-material/elevation-shadows.html\r\n * Examples:\r\n *\r\n *\r\n * .md-foo {\r\n *   @include $md-elevation(2);\r\n *\r\n *   &:active {\r\n *     @include $md-elevation(8);\r\n *   }\r\n * }\r\n *\r\n * <div id=\"external-card\" class=\"md-elevation-z2\"><p>Some content</p></div>\r\n *\r\n * For an explanation of the design behind how elevation is implemented, see the design doc at\r\n * https://goo.gl/Kq0k9Z.\r\n */\r\n\r\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\r\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\r\n// space completely obscured by an object relative to its light source), one for penumbra (the\r\n// space partially obscured by an object), and one for ambient (the space which contains the object\r\n// itself). For a further explanation of these terms and their meanings, see\r\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\r\n\r\n$_umbra-color: rgba(black, 0.2);\r\n$_penumbra-color: rgba(black, 0.14);\r\n$_ambient-color: rgba(black, 0.12);\r\n\r\n// Maps for the different shadow sets and their values within each z-space. These values were\r\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\r\n// all of the values between them.\r\n\r\n$_umbra-elevation-map: (\r\n  0: '0px 0px 0px 0px #{$_umbra-color}',\r\n  1: '0px 2px 1px -1px #{$_umbra-color}',\r\n  2: '0px 3px 1px -2px #{$_umbra-color}',\r\n  3: '0px 3px 3px -2px #{$_umbra-color}',\r\n  4: '0px 2px 4px -1px #{$_umbra-color}',\r\n  5: '0px 3px 5px -1px #{$_umbra-color}',\r\n  6: '0px 3px 5px -1px #{$_umbra-color}',\r\n  7: '0px 4px 5px -2px #{$_umbra-color}',\r\n  8: '0px 5px 5px -3px #{$_umbra-color}',\r\n  9: '0px 5px 6px -3px #{$_umbra-color}',\r\n  10: '0px 6px 6px -3px #{$_umbra-color}',\r\n  11: '0px 6px 7px -4px #{$_umbra-color}',\r\n  12: '0px 7px 8px -4px #{$_umbra-color}',\r\n  13: '0px 7px 8px -4px #{$_umbra-color}',\r\n  14: '0px 7px 9px -4px #{$_umbra-color}',\r\n  15: '0px 8px 9px -5px #{$_umbra-color}',\r\n  16: '0px 8px 10px -5px #{$_umbra-color}',\r\n  17: '0px 8px 11px -5px #{$_umbra-color}',\r\n  18: '0px 9px 11px -5px #{$_umbra-color}',\r\n  19: '0px 9px 12px -6px #{$_umbra-color}',\r\n  20: '0px 10px 13px -6px #{$_umbra-color}',\r\n  21: '0px 10px 13px -6px #{$_umbra-color}',\r\n  22: '0px 10px 14px -6px #{$_umbra-color}',\r\n  23: '0px 11px 14px -7px #{$_umbra-color}',\r\n  24: '0px 11px 15px -7px #{$_umbra-color}'\r\n);\r\n\r\n$_penumbra-elevation-map: (\r\n  0: '0px 0px 0px 0px #{$_penumbra-color}',\r\n  1: '0px 1px 1px 0px #{$_penumbra-color}',\r\n  2: '0px 2px 2px 0px #{$_penumbra-color}',\r\n  3: '0px 3px 4px 0px #{$_penumbra-color}',\r\n  4: '0px 4px 5px 0px #{$_penumbra-color}',\r\n  5: '0px 5px 8px 0px #{$_penumbra-color}',\r\n  6: '0px 6px 10px 0px #{$_penumbra-color}',\r\n  7: '0px 7px 10px 1px #{$_penumbra-color}',\r\n  8: '0px 8px 10px 1px #{$_penumbra-color}',\r\n  9: '0px 9px 12px 1px #{$_penumbra-color}',\r\n  10: '0px 10px 14px 1px #{$_penumbra-color}',\r\n  11: '0px 11px 15px 1px #{$_penumbra-color}',\r\n  12: '0px 12px 17px 2px #{$_penumbra-color}',\r\n  13: '0px 13px 19px 2px #{$_penumbra-color}',\r\n  14: '0px 14px 21px 2px #{$_penumbra-color}',\r\n  15: '0px 15px 22px 2px #{$_penumbra-color}',\r\n  16: '0px 16px 24px 2px #{$_penumbra-color}',\r\n  17: '0px 17px 26px 2px #{$_penumbra-color}',\r\n  18: '0px 18px 28px 2px #{$_penumbra-color}',\r\n  19: '0px 19px 29px 2px #{$_penumbra-color}',\r\n  20: '0px 20px 31px 3px #{$_penumbra-color}',\r\n  21: '0px 21px 33px 3px #{$_penumbra-color}',\r\n  22: '0px 22px 35px 3px #{$_penumbra-color}',\r\n  23: '0px 23px 36px 3px #{$_penumbra-color}',\r\n  24: '0px 24px 38px 3px #{$_penumbra-color}'\r\n);\r\n\r\n$_ambient-elevation-map: (\r\n  0: '0px 0px 0px 0px #{$_ambient-color}',\r\n  1: '0px 1px 3px 0px #{$_ambient-color}',\r\n  2: '0px 1px 5px 0px #{$_ambient-color}',\r\n  3: '0px 1px 8px 0px #{$_ambient-color}',\r\n  4: '0px 1px 10px 0px #{$_ambient-color}',\r\n  5: '0px 1px 14px 0px #{$_ambient-color}',\r\n  6: '0px 1px 18px 0px #{$_ambient-color}',\r\n  7: '0px 2px 16px 1px #{$_ambient-color}',\r\n  8: '0px 3px 14px 2px #{$_ambient-color}',\r\n  9: '0px 3px 16px 2px #{$_ambient-color}',\r\n  10: '0px 4px 18px 3px #{$_ambient-color}',\r\n  11: '0px 4px 20px 3px #{$_ambient-color}',\r\n  12: '0px 5px 22px 4px #{$_ambient-color}',\r\n  13: '0px 5px 24px 4px #{$_ambient-color}',\r\n  14: '0px 5px 26px 4px #{$_ambient-color}',\r\n  15: '0px 6px 28px 5px #{$_ambient-color}',\r\n  16: '0px 6px 30px 5px #{$_ambient-color}',\r\n  17: '0px 6px 32px 5px #{$_ambient-color}',\r\n  18: '0px 7px 34px 6px #{$_ambient-color}',\r\n  19: '0px 7px 36px 6px #{$_ambient-color}',\r\n  20: '0px 8px 38px 7px #{$_ambient-color}',\r\n  21: '0px 8px 40px 7px #{$_ambient-color}',\r\n  22: '0px 8px 42px 7px #{$_ambient-color}',\r\n  23: '0px 9px 44px 8px #{$_ambient-color}',\r\n  24: '0px 9px 46px 8px #{$_ambient-color}'\r\n);\r\n\r\n/**\r\n * The css property used for elevation. In most cases this should not be changed. It is exposed\r\n * as a variable for abstraction / easy use when needing to reference the property directly, for\r\n * example in a will-change rule.\r\n */\r\n$md-elevation-property: box-shadow !default;\r\n\r\n/** The default duration value for elevation transitions. */\r\n$md-elevation-transition-duration: 280ms !default;\r\n\r\n/** The default easing value for elevation transitions. */\r\n$md-elevation-transition-timing-function: $md-fast-out-slow-in-timing-function;\r\n\r\n/**\r\n * Applies the correct css rules to an element to give it the elevation specified by $zValue.\r\n * The $zValue must be between 0 and 24.\r\n */\r\n@mixin md-elevation($zValue) {\r\n  @if type-of($zValue) != number or not unitless($zValue) {\r\n    @error \"$zValue must be a unitless number\";\r\n  }\r\n  @if $zValue < 0 or $zValue > 24 {\r\n    @error \"$zValue must be between 0 and 24\";\r\n  }\r\n\r\n  #{$md-elevation-property}: #{map-get($_umbra-elevation-map, $zValue)},\r\n                             #{map-get($_penumbra-elevation-map, $zValue)},\r\n                             #{map-get($_ambient-elevation-map, $zValue)};\r\n}\r\n\r\n/**\r\n * Returns a string that can be used as the value for a transition property for elevation.\r\n * Calling this function directly is useful in situations where a component needs to transition\r\n * more than one property.\r\n *\r\n * .foo {\r\n *   transition: md-elevation-transition-property-value(), opacity 100ms ease;\r\n *   will-change: $md-elevation-property, opacity;\r\n * }\r\n */\r\n@function md-elevation-transition-property-value(\r\n    $duration: $md-elevation-transition-duration,\r\n    $easing: $md-elevation-transition-timing-function) {\r\n  @return #{$md-elevation-property} #{$duration} #{$easing};\r\n}\r\n\r\n/**\r\n * Applies the correct css rules needed to have an element transition between elevations.\r\n * This mixin should be applied to elements whose elevation values will change depending on their\r\n * context (e.g. when active or disabled).\r\n */\r\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\r\n// be used in the same way by clients.\r\n@mixin md-elevation-transition(\r\n    $duration: $md-elevation-transition-duration,\r\n    $easing: $md-elevation-transition-timing-function) {\r\n  transition: md-elevation-transition-property-value($duration, $easing);\r\n  will-change: $md-elevation-property;\r\n}\r\n"],"mappings":"AGEA;;;;;;;;;;;;;;;;;;;GAmBG;AAqGH;;;;GAIG;AAGH,4DAA4D;AAG5D,0DAA0D;AAG1D;;;GAGG;AAcH;;;;;;;;;GASG;AAOH;;;;GAIG;AHzKH,AAAA,MAAM,CAAC;EACL,YAAY,EAAE,CAAE;EAChB,aAAa,EAAE,CAAE,GAgBlB;EAlBD,AAGE,MAHI,CAGJ,KAAK,CAAC;IACJ,MAAM,EAAE,OAAQ;IAChB,OAAO,EAAE,KAAM;IACf,MAAM,EAAE,IAAK;IACb,YAAY,EAAE,GAAI;IAClB,aAAa,EAAE,GAAI,GASpB;IAjBH,AASI,MATE,CAGJ,KAAK,CAMH,OAAO,CAAC;MACN,QAAQ,EAAE,QAAS;MACnB,GAAG,EAAE,GAAI;MACT,aAAa,EAAE,GAAI,GACpB;IAbL,AAcS,MAdH,CAGJ,KAAK,CAWH,KAAK,AAAA,qBAAqB,CAAC;MACzB,OAAO,EAAE,IAAK,GACf;;AAGL,AAAA,eAAe,CAAC;EACd,MAAM,EAAE,IAAK;EACb,KAAK,EAAE,IAAK;EACZ,QAAQ,EAAE,QAAS;EACnB,GAAG,EAAE,IAAK;EACV,IAAI,EAAE,KAAM,GAKb;EAVD,AAME,eANa,CAMb,OAAO,CAAC;IACN,gBAAgB,EAAE,KAAM;IACxB,aAAa,EAAE,IAAK,GACrB;;AAEH;;EAEE;AACF,AAAA,UAAU,CAAC;EAET,aAAa,EAAE,GAAI;EACnB,UAAU,EAAE,UAAU,CC2CE,IAAI,CACG,gCAAY,EEkFnC,UAAyB,CAAC,KAAY,CAAC,4BAAU;EAlBzD,UAAyB,EAAE,mCAA0C,EAC1C,oCAA6C,EAC7C,oCAA4C,GHxGxE;EATD,AAME,UANQ,CAMR,CAAC,CAAC;IACA,cAAc,EAAE,IAAK,GACtB","names":[],"sourceRoot":"/source/"}